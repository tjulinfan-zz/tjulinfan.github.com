<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CF | 森林木]]></title>
  <link href="http://tjulinfan.github.io/blog/categories/cf/atom.xml" rel="self"/>
  <link href="http://tjulinfan.github.io/"/>
  <updated>2014-06-03T21:39:12+08:00</updated>
  <id>http://tjulinfan.github.io/</id>
  <author>
    <name><![CDATA[tjulinfan]]></name>
    <email><![CDATA[tjulinfan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Codeforces Beta Round #5 解题报告]]></title>
    <link href="http://tjulinfan.github.io/blog/2014/04/29/codeforces-beta-round-number-5-jie-ti-bao-gao/"/>
    <updated>2014-04-29T12:25:09+08:00</updated>
    <id>http://tjulinfan.github.io/blog/2014/04/29/codeforces-beta-round-number-5-jie-ti-bao-gao</id>
    <content type="html"><![CDATA[<h3><a href="http://codeforces.com/contest/5/problem/A">CF5A Chat Servers Outgoing Traffic</a></h3>

<h4>题目大意</h4>

<p>三种操作：添加一个人，删除某个人，向名单中所有人发送一条消息。问所有操作之后发送的消息总长度。</p>

<h4>解法</h4>

<p>直接用 map 保存这个人名，然后要发送消息时统计 <em>map 中人数 * 消息长度</em> 加到答案中。</p>

<p>感觉这题很黄很暴力。。。</p>

<h4>代码</h4>

<p><a href="https://github.com/tjulinfan/Codeforces/blob/master/Codeforces%20Beta%20Round%20%235/CF5A.cpp">见GitHub</a></p>

<h3><a href="http://codeforces.com/contest/5/problem/B">CF5B Center Alignment</a></h3>

<h4>题目大意</h4>

<p>输入一些字符串，将这些字符串跟其中最长的字符串居中对齐，当不能完全居中时，第一次此种情况左边多一格，下一次这种情况右边多一格，以此类推输出。</p>

<h4>解法</h4>

<p>很水，简单除一下然后加个标识变量即可。</p>

<h4>代码</h4>

<p><a href="https://github.com/tjulinfan/Codeforces/blob/master/Codeforces%20Beta%20Round%20%235/CF5B.cpp">见GitHub</a></p>

<h3><a href="http://codeforces.com/contest/5/problem/C">CF5C Longest Regular Bracket Sequence</a></h3>

<h4>题目大意</h4>

<p>一个只包含左括号右括号的序列，求其中合法嵌套的最长子序列以及最长子序列个数。</p>

<h4>解法</h4>

<p>根据括号匹配的性质我们可以用栈存储当前位置之前的所有左括号，而用len[i]表示当前位置（右括号）向前的合法序列长度。很显然：假如当前位置i是左括号则将其入栈，否则计算len[i]，如果栈不为空则弹栈顶x，<strong><em>len[i]=len[x &ndash; 1] + i &ndash; x + 1</em></strong>，栈为空则len[i]为0。最后再遍历一遍统计答案。</p>

<h4>代码</h4>

<p><a href="https://github.com/tjulinfan/Codeforces/blob/master/Codeforces%20Beta%20Round%20%235/CF5C.cpp">见GitHub</a></p>

<h3><a href="http://codeforces.com/contest/5/problem/D">CF5D Follow Traffic Rules</a></h3>

<h4>题目大意</h4>

<p>在一条马路上（长度为l），一辆车初速度为0，加速度为a，极限速度为v，然后在离起点为d的地方限时速在w之内，问该车最少多久可以到达终点。</p>

<h4>解法</h4>

<p>这个题基本学过高中物理的应该想起来都比较简单，但是写起来其实还是有点蛋疼的，参考了官方题解发现有两个函数还是很巧妙的。下面讲一下具体的解法吧：</p>

<p>两个函数：</p>

<p>1.dist(speed, time) <br />
初速度为speed，加速度为a的情况下可以行使的路程，很显然为 <strong><em>speed * time + a * time * time / 2</em></strong></p>

<p>2.travelTime(distance, speed) <br />
在不考虑极限速度的情况下： <strong><em>speed * time + a * time * time / 2 = distance</em></strong> 这个一元二次方程可以通过求根公式直接求出非负根，求出的时间设为 <strong>tAll</strong> ,设 <strong><em>tMax = (v &ndash; speed) / a</em></strong> ，如果tMax>=tAll那么该函数的返回值就是 <strong>tAll</strong>，否则应该返回 <strong><em>tMax + (distance - dist(speed, tMax)) / v</em></strong></p>

<br />


<blockquote><p>接下来就是 <strong>O(1)</strong> 时间内求出解：</p>

<ol>
<li><p>w >= v<br/>
答案就是<strong>travelTime(l, 0)</strong></p></li>
<li><p>w &lt; v<br/>
计算 <strong>tw = w / a, dw = dist(0, tw)</strong><br/>
2.1 dw >= d 答案是 <strong>travelTime(l, 0)</strong><br/>
2.2 dw &lt; d 答案是 <strong>tw + travelTime((d &ndash; dw) / 2, w) * 2 + travelTime(l &ndash; d, w)</strong></p></li>
</ol>
</blockquote>

<h4>代码</h4>

<p><a href="https://github.com/tjulinfan/Codeforces/blob/master/Codeforces%20Beta%20Round%20%235/CF5D.cpp">见GitHub</a></p>

<h3><a href="http://codeforces.com/problemset/problem/5/E">CF5E Bindian Signalizing</a></h3>

<h4>题目大意</h4>

<p>在一个环上有n个点，每个点有个高度，问有多少对点可以互相看见，互相看见是指在顺时针方向或者逆时针方向上没有其他点的高度超过这对点中的任意一个。</p>

<h4>解法</h4>

<p>由于是一个环，我们要尽量得将其变成直线上来做——选取高度最大的点放在起始位置，后面的按顺时针或者逆时针依次放置。同时最后再放置一个高度最大的点。</p>

<p>每个点记录三个值l， r， c</p>

<ul>
<li>l 表示向左最近的高度比该点大的位置（没有就记为-1）</li>
<li>r 表示向右最近的高度比该点大的位置 (没有就记为n + 1)</li>
<li>c 表示从 l 到该点位置中与该点高度相同的点的个数</li>
</ul>


<p>很显然，对于当前点来说答案应该加上：</p>

<ul>
<li>如果 l 不为-1则加上1</li>
<li>如果 r 不为n+1则加上1</li>
<li>如果 l 为0，r 为n则减去1（因为首尾其实是一个点）</li>
<li>答案加上c</li>
</ul>


<h4>代码</h4>

<p><a href="https://github.com/tjulinfan/Codeforces/blob/master/Codeforces%20Beta%20Round%20%235/CF5E.cpp">见GitHub</a></p>

<h3>总结</h3>

<p>CF很多题都是很巧妙的，感觉自己好弱啊。。。</p>
]]></content>
  </entry>
  
</feed>
